plugins {
    id "java-platform"
    id "maven-publish"
    id "signing"
}

description = "Spring Cloud Finders BOM"

javaPlatform {
    allowDependencies()
}

dependencies {
    api platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    api platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")

    constraints {
        api "io.github.dxx:spring-cloud-starter-finders:${project.version}"
        api "io.github.dxx:spring-cloud-finders-discovery:${project.version}"
        api "io.projectreactor:reactor-core:${reactorVersion}"
        api "io.github.dxx:finders-client:${findersClientVersion}"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.javaPlatform

            pom {
                afterEvaluate {
                    name = project.name
                    description = project.description
                }

                url = "https://github.com/dxx/spring-cloud-finders"

                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        id = "dxx"
                        name = "dxx"
                        email = "dx1898@foxmail.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/dxx/spring-cloud-finders.git"
                    developerConnection = "scm:git:ssh://github.com/dxx/spring-cloud-finders.git"
                    url = "https://github.com/dxx/spring-cloud-finders"
                }
            }
        }
    }
    repositories {
        mavenLocal()

        maven {
            def sonatypeUsername = project.hasProperty("sonatypeUsername") ?
                    project.getProperties().get("sonatypeUsername") : ""
            def sonatypePassword = project.hasProperty("sonatypePassword") ?
                    project.getProperties().get("sonatypePassword") : ""

            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
