apply plugin: "maven-publish"
apply plugin: "signing"

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                afterEvaluate {
                    name = project.name
                    description = project.description
                }

                url = "https://github.com/dxx/spring-cloud-finders"

                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        id = "dxx"
                        name = "dxx"
                        email = "dx1898@foxmail.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/dxx/spring-cloud-finders.git"
                    developerConnection = "scm:git:ssh://github.com/dxx/spring-cloud-finders.git"
                    url = "https://github.com/dxx/spring-cloud-finders"
                }

                withXml {
                    def node = asNode()
                    node.dependencies.dependency.findAll { xmlDep ->
                        xmlDep.scope.text() == "runtime" && project.configurations.implementation
                                .allDependencies.find { dep ->
                            xmlDep.groupId.text() == dep.group && xmlDep.artifactId.text() == dep.name
                        }.each {
                            xmlDep.scope*.value = "compile"
                            xmlDep.appendNode("optional", true)
                        }
                    }
                }
            }
        }
    }

    repositories {
        mavenLocal()

        maven {
            def sonatypeUsername = project.hasProperty("sonatypeUsername") ?
                    project.getProperties().get("sonatypeUsername") : ""
            def sonatypePassword = project.hasProperty("sonatypePassword") ?
                    project.getProperties().get("sonatypePassword") : ""

            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
